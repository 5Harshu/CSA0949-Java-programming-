import java.util.Arrays;

public class Solution {
    public int[] kWeakestRows(int[][] mat, int k) {
        int m = mat.length;
        int n = mat[0].length;
        int[] soldierCount = new int[m];
        Integer[] indices = new Integer[m];

        for (int i = 0; i < m; i++) {
            indices[i] = i;
            int left = 0, right = n;
            while (left < right) {
                int mid = (left + right) / 2;
                if (mat[i][mid] == 0) {
                    right = mid;
                } else {
                    left = mid + 1;
                }
            }
            soldierCount[i] = left; 
        }
        Arrays.sort(indices, (a, b) -> {
            if (soldierCount[a] != soldierCount[b]) {
                return soldierCount[a] - soldierCount[b];
            }
            return a - b;
        });
        int[] result = new int[k];
        for (int i = 0; i < k; i++) {
            result[i] = indices[i];
        }
        return result;
    }
}
